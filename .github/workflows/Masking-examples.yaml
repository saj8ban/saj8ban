#Example:Masking a generated output within a single job
#If you dont need to pass your secret from one job to another job, you can
# 1. Generate the secret
# 2. Mask it with add-mask
# 3. Use GITHUB_OUTPUT to make the secret available to other steps within the job

name: Masking-example
on: push
jobs:
  generate-a-secret-output:
    runs-on: ubuntu-latest
    steps:
      - id: sets-a-secret
        name: Generate, mask, and output a secret
        run: |
          the_secret=$((RANDOM))
          echo "::add-mask::$the_secret"
          echo "secret-number=$the_secret" >> "$GITHUB_OUTPUT"
      - name: Use that secret output (protected by a mask)
        run: |
          echo "the secret number is ${{steps.sets-a-secret.outputs.secret-number}}"        
